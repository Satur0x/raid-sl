#![allow(unused_imports)]

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `config` table.
    ///
    /// (Automatically generated by Diesel.)
    config (name) {
        /// The `name` column of the `config` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        name -> Text,
        /// The `value` column of the `config` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        value -> Text,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `roles` table.
    ///
    /// (Automatically generated by Diesel.)
    roles (id) {
        /// The `id` column of the `roles` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `title` column of the `roles` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        title -> Text,
        /// The `repr` column of the `roles` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        repr -> Text,
        /// The `emoji` column of the `roles` table.
        ///
        /// Its SQL type is `Int8`.
        ///
        /// (Automatically generated by Diesel.)
        emoji -> Int8,
        /// The `active` column of the `roles` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        active -> Bool,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `signup_roles` table.
    ///
    /// (Automatically generated by Diesel.)
    signup_roles (signup_id, role_id) {
        /// The `signup_id` column of the `signup_roles` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        signup_id -> Int4,
        /// The `role_id` column of the `signup_roles` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        role_id -> Int4,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `signups` table.
    ///
    /// (Automatically generated by Diesel.)
    signups (id) {
        /// The `id` column of the `signups` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `user_id` column of the `signups` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        user_id -> Int4,
        /// The `training_id` column of the `signups` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        training_id -> Int4,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `tier_mappings` table.
    ///
    /// (Automatically generated by Diesel.)
    tier_mappings (id) {
        /// The `id` column of the `tier_mappings` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `tier_id` column of the `tier_mappings` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        tier_id -> Int4,
        /// The `discord_role_id` column of the `tier_mappings` table.
        ///
        /// Its SQL type is `Int8`.
        ///
        /// (Automatically generated by Diesel.)
        discord_role_id -> Int8,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `tiers` table.
    ///
    /// (Automatically generated by Diesel.)
    tiers (id) {
        /// The `id` column of the `tiers` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `name` column of the `tiers` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        name -> Text,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `training_roles` table.
    ///
    /// (Automatically generated by Diesel.)
    training_roles (training_id, role_id) {
        /// The `training_id` column of the `training_roles` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        training_id -> Int4,
        /// The `role_id` column of the `training_roles` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        role_id -> Int4,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `trainings` table.
    ///
    /// (Automatically generated by Diesel.)
    trainings (id) {
        /// The `id` column of the `trainings` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `title` column of the `trainings` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        title -> Text,
        /// The `date` column of the `trainings` table.
        ///
        /// Its SQL type is `Timestamp`.
        ///
        /// (Automatically generated by Diesel.)
        date -> Timestamp,
        /// The `state` column of the `trainings` table.
        ///
        /// Its SQL type is `Training_state`.
        ///
        /// (Automatically generated by Diesel.)
        state -> Training_state,
        /// The `tier_id` column of the `trainings` table.
        ///
        /// Its SQL type is `Nullable<Int4>`.
        ///
        /// (Automatically generated by Diesel.)
        tier_id -> Nullable<Int4>,
    }
}

table! {
    use diesel::sql_types::*;
    use crate::db::*;

    /// Representation of the `users` table.
    ///
    /// (Automatically generated by Diesel.)
    users (id) {
        /// The `id` column of the `users` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        id -> Int4,
        /// The `discord_id` column of the `users` table.
        ///
        /// Its SQL type is `Int8`.
        ///
        /// (Automatically generated by Diesel.)
        discord_id -> Int8,
        /// The `gw2_id` column of the `users` table.
        ///
        /// Its SQL type is `Text`.
        ///
        /// (Automatically generated by Diesel.)
        gw2_id -> Text,
    }
}

joinable!(signup_roles -> roles (role_id));
joinable!(signup_roles -> signups (signup_id));
joinable!(signups -> trainings (training_id));
joinable!(signups -> users (user_id));
joinable!(tier_mappings -> tiers (tier_id));
joinable!(training_roles -> roles (role_id));
joinable!(training_roles -> trainings (training_id));
joinable!(trainings -> tiers (tier_id));

allow_tables_to_appear_in_same_query!(
    config,
    roles,
    signup_roles,
    signups,
    tier_mappings,
    tiers,
    training_roles,
    trainings,
    users,
);
